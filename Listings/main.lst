C51 COMPILER V9.57.0.0   MAIN                                                              05/06/2018 21:01:14 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg51.h>
   2          #include <stdio.h>
   3          
   4          //display pins
   5          #define LCD_PORT P1
   6          sbit LCD_E = P1^3;
   7          sbit LCD_RS = P1^2;
   8          
   9          //display variables
  10          unsigned char * singleChar;
  11          signed int temp;
  12          char display_buffer[33];
  13          float ftemp;
  14          
  15          //sensor 
  16          unsigned char sensorBuffer[2];
  17          sbit pin_1W=P3^3;
  18          
  19          //relay
  20          sbit pin_relay = P3^7;
  21          
  22          //function headers
  23          void delay(unsigned int i);
  24          void init_1W(void);
  25          unsigned char readByte_1W(void);
  26          void writeByte_1W(unsigned char dat);
  27          void read_sensor(void);
  28          void lcd_cmd(unsigned char cmd);
  29          void lcd_chars(unsigned char * chars);
  30          void lcd_init();
  31          
  32          void main()
  33          {
  34   1        pin_relay = 0;
  35   1        LCD_PORT = 0;
  36   1        LCD_E = 0;
  37   1        LCD_RS = 0;
  38   1        lcd_init();
  39   1      
  40   1        while(1)
  41   1        {
  42   2          read_sensor();
  43   2          temp = sensorBuffer[0]; //lsb
  44   2          temp &= 0x00FF;
  45   2          temp |= (sensorBuffer[1] << 8);
  46   2          ftemp = temp * 0.0625;
  47   2          sprintf(display_buffer, "T = %f", ftemp);
  48   2          lcd_cmd(0x01);
  49   2          lcd_cmd(0x80);
  50   2          lcd_chars(display_buffer);
  51   2          pin_relay = 1;
  52   2          delay(10000);
  53   2        }
  54   1      }
C51 COMPILER V9.57.0.0   MAIN                                                              05/06/2018 21:01:14 PAGE 2   

  55          
  56          //function implementations
  57          void delay(unsigned int i)
  58          {
  59   1          while(i--);
  60   1      }
  61          
  62          //OneWire basic functions
  63          void init_1W(void)
  64          {
  65   1          unsigned char x=0;
  66   1          pin_1W = 1;
  67   1          delay(8);
  68   1          pin_1W = 0;
  69   1          delay(80);
  70   1          pin_1W = 1;
  71   1          delay(14);
  72   1          x=pin_1W;
  73   1          delay(20);
  74   1      }
  75          
  76          unsigned char readByte_1W(void)
  77          {
  78   1          unsigned char i=0;
  79   1          unsigned char dat = 0;
  80   1          for (i=8;i>0;i--)
  81   1          {
  82   2            pin_1W = 0;
  83   2            dat>>=1;
  84   2            pin_1W = 1;
  85   2            if(pin_1W)
  86   2            dat|=0x80;
  87   2            delay(4);
  88   2          }
  89   1          return(dat);
  90   1      }
  91          
  92          void writeByte_1W(unsigned char dat)
  93          {
  94   1          unsigned char i=0;
  95   1          for (i=8; i>0; i--)
  96   1          {
  97   2            pin_1W = 0;
  98   2            pin_1W = dat&0x01;
  99   2            delay(5);
 100   2            pin_1W = 1;
 101   2            dat>>=1;
 102   2          }
 103   1          delay(4);
 104   1      }
 105          
 106          //temperature read for DS18B20
 107          //raw 16 bit value in sensorBuffer
 108          void read_sensor(void)
 109          {
 110   1          init_1W();
 111   1          writeByte_1W(0xCC); //skip ROM
 112   1          writeByte_1W(0x44); //convert T
 113   1          init_1W();
 114   1          writeByte_1W(0xCC); //skip ROM
 115   1          writeByte_1W(0xBE); //read scratchpad
 116   1          sensorBuffer[0]=readByte_1W();
C51 COMPILER V9.57.0.0   MAIN                                                              05/06/2018 21:01:14 PAGE 3   

 117   1          sensorBuffer[1]=readByte_1W();
 118   1      }
 119          
 120          //LM016L compatible LCD display functions
 121          void lcd_cmd(unsigned char cmd)
 122          {
 123   1          LCD_RS = 0;
 124   1          LCD_PORT &= 0x0F; 
 125   1          LCD_PORT = (cmd & 0xF0);
 126   1          LCD_E = 1;
 127   1          delay(1000);
 128   1          LCD_E = 0;
 129   1        
 130   1          delay(10000);
 131   1        
 132   1          LCD_PORT &= 0x0F;
 133   1          LCD_PORT = ((cmd << 4) & 0xF0);
 134   1          LCD_E = 1;
 135   1          delay(1000);
 136   1          LCD_E = 0;
 137   1        
 138   1          delay(10000);
 139   1      }
 140          
 141          void lcd_chars(unsigned char * chars)
 142          {
 143   1        LCD_RS = 1;
 144   1        singleChar = chars;
 145   1        
 146   1        while(*singleChar != '\0')
 147   1        {
 148   2          LCD_PORT &= 0x0F; 
 149   2          LCD_PORT |= ((*singleChar) & 0xF0);
 150   2          LCD_RS = 1;
 151   2          LCD_E = 1;
 152   2          delay(1000);
 153   2          LCD_E = 0;
 154   2          
 155   2          delay(10000);
 156   2          
 157   2          LCD_PORT &= 0x0F;
 158   2          LCD_PORT |= (((*singleChar) << 4) & 0xF0);
 159   2          LCD_RS = 1;
 160   2          LCD_E = 1;
 161   2          delay(1000);
 162   2          LCD_E = 0;
 163   2            
 164   2          delay(10000);
 165   2            
 166   2          singleChar++;
 167   2        }
 168   1      }
 169          
 170          void lcd_init()
 171          {
 172   1        lcd_cmd(0x02); //4 bit mode
 173   1        lcd_cmd(0x28); //5x7 chars
 174   1        lcd_cmd(0x0E); //cursor on
 175   1        lcd_cmd(0x01); //clear
 176   1        lcd_cmd(0x80); //move cursor to first position
 177   1      }

C51 COMPILER V9.57.0.0   MAIN                                                              05/06/2018 21:01:14 PAGE 4   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    401    ----
   CONSTANT SIZE    =      7    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     44    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
